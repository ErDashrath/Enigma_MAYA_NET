# Generated by Django 5.2.6 on 2025-09-20 07:14

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('emergency_phone', models.CharField(blank=True, max_length=15)),
                ('chronic_conditions', models.TextField(blank=True, help_text='List of chronic conditions')),
                ('medications', models.TextField(blank=True, help_text='Current medications')),
                ('allergies', models.TextField(blank=True, help_text='Known allergies')),
                ('current_stability_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], default='low', max_length=10)),
                ('last_assessment', models.DateTimeField(auto_now=True)),
                ('notification_preferences', models.JSONField(blank=True, default=dict)),
                ('privacy_settings', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Patient Profile',
                'verbose_name_plural': 'Patient Profiles',
                'db_table': 'patients_profile',
            },
        ),
        migrations.CreateModel(
            name='PatientNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('general', 'General Note'), ('symptom', 'Symptom Report'), ('medication', 'Medication Note'), ('appointment', 'Appointment Note'), ('emergency', 'Emergency Note')], default='general', max_length=15)),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('is_private', models.BooleanField(default=False, help_text='Private notes only visible to clinicians')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags for categorization')),
                ('attachments', models.JSONField(blank=True, default=list, help_text='File attachments metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='patients.patientprofile')),
            ],
            options={
                'verbose_name': 'Patient Note',
                'verbose_name_plural': 'Patient Notes',
                'db_table': 'patients_notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HealthGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_type', models.CharField(choices=[('blood_pressure', 'Blood Pressure'), ('weight', 'Weight Management'), ('exercise', 'Exercise'), ('diet', 'Diet'), ('medication', 'Medication Adherence'), ('stress', 'Stress Management'), ('sleep', 'Sleep Quality')], max_length=20)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('target_value', models.FloatField(help_text='Target value for the goal')),
                ('current_value', models.FloatField(default=0.0, help_text='Current progress value')),
                ('unit', models.CharField(help_text='Unit of measurement', max_length=20)),
                ('target_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('achieved', 'Achieved'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='active', max_length=10)),
                ('progress_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_goals', to='patients.patientprofile')),
            ],
            options={
                'verbose_name': 'Health Goal',
                'verbose_name_plural': 'Health Goals',
                'db_table': 'patients_health_goals',
                'ordering': ['-created_at'],
            },
        ),
    ]
