# Generated by Django 5.2.6 on 2025-09-20 07:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClinicianProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('specialization', models.CharField(choices=[('cardiology', 'Cardiology'), ('endocrinology', 'Endocrinology'), ('pulmonology', 'Pulmonology'), ('nephrology', 'Nephrology'), ('general', 'General Medicine'), ('nursing', 'Nursing'), ('nutrition', 'Nutrition'), ('psychology', 'Psychology')], max_length=20)),
                ('years_experience', models.IntegerField()),
                ('phone', models.CharField(max_length=20)),
                ('hospital_affiliation', models.CharField(blank=True, max_length=100)),
                ('department', models.CharField(blank=True, max_length=50)),
                ('medical_degree', models.CharField(max_length=50)),
                ('board_certifications', models.JSONField(default=list)),
                ('languages_spoken', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Clinician Profile',
                'verbose_name_plural': 'Clinician Profiles',
                'db_table': 'clinician_profiles',
            },
        ),
        migrations.CreateModel(
            name='ClinicalNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('assessment', 'Assessment'), ('progress', 'Progress Note'), ('treatment', 'Treatment Plan'), ('consultation', 'Consultation'), ('discharge', 'Discharge Summary'), ('follow_up', 'Follow-up')], max_length=15)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('diagnosis_codes', models.JSONField(default=list, help_text='ICD-10 codes')),
                ('medications_prescribed', models.JSONField(default=list)),
                ('recommendations', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinical_notes', to='patients.patientprofile')),
                ('clinician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinical_notes', to='clinicians.clinicianprofile')),
            ],
            options={
                'verbose_name': 'Clinical Note',
                'verbose_name_plural': 'Clinical Notes',
                'db_table': 'clinical_notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('modified', 'Modified'), ('completed', 'Completed'), ('discontinued', 'Discontinued')], default='draft', max_length=15)),
                ('priority', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('goals', models.JSONField(default=list, help_text='Treatment goals and objectives')),
                ('interventions', models.JSONField(default=list, help_text='Planned interventions')),
                ('medications', models.JSONField(default=list, help_text='Prescribed medications')),
                ('lifestyle_modifications', models.JSONField(default=list, help_text='Lifestyle changes')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('review_date', models.DateTimeField(help_text='Next review date')),
                ('progress_notes', models.TextField(blank=True)),
                ('adherence_score', models.IntegerField(blank=True, help_text='Adherence score 0-100', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('clinician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_plans', to='clinicians.clinicianprofile')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_plans', to='patients.patientprofile')),
            ],
            options={
                'verbose_name': 'Treatment Plan',
                'verbose_name_plural': 'Treatment Plans',
                'db_table': 'treatment_plans',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_type', models.CharField(choices=[('primary', 'Primary Care Provider'), ('specialist', 'Specialist Consultation'), ('temporary', 'Temporary Coverage'), ('collaborative', 'Collaborative Care')], max_length=15)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('transferred', 'Transferred'), ('completed', 'Completed')], default='active', max_length=15)),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('clinician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_assignments', to='clinicians.clinicianprofile')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinician_assignments', to='patients.patientprofile')),
            ],
            options={
                'verbose_name': 'Patient Assignment',
                'verbose_name_plural': 'Patient Assignments',
                'db_table': 'patient_assignments',
                'unique_together': {('clinician', 'patient', 'assignment_type')},
            },
        ),
    ]
